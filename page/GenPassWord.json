{
  "type": "button",
  "label": "随机密码",
  "onEvent": {
    "click": {
      "actions": [
        {
          "ignoreError": false,
          "script": "/* 自定义JS使用说明：\n  * 1.动作执行函数doAction，可以执行所有类型的动作\n  * 2.通过上下文对象context可以获取当前组件实例，例如context.props可以获取该组件相关属性\n  * 3.事件对象event，在doAction之后执行event.stopPropagation();可以阻止后续动作执行\n*/\nfunction generateRandomPassword(length) {\n  // 定义密码可能包含的字符集合\n  const charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\";\n  let password = \"\";\n\n  // 随机生成密码\n  for (let i = 0; i < length; i++) {\n    // 获取随机索引\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    // 将随机字符添加到密码字符串\n    password += charset[randomIndex];\n  }\n\n  return password;\n}\nvar pass = generateRandomPassword(6);\ndoAction({\n  actionType: 'setValue',\n  componentId: 'accountpassword',\n  args: { value: pass }\n});\n",
          "actionType": "custom",
          "args": {}
        }
      ]
    }
  },
  "id": "u:b6b5dc20d1e6",
  "themeCss": {
    "className": {
      "padding-and-margin:default": {},
      "border:default": {
        "top-border-style": "var(--borders-style-1)",
        "left-border-style": "var(--borders-style-1)",
        "right-border-style": "var(--borders-style-1)",
        "bottom-border-style": "var(--borders-style-1)"
      }
    }
  },
  "level": "success",
  "wrapperCustomStyle": {
    "position": "absolute",
    "right": "0"
  }
}